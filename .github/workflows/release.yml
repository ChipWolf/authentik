name: authentik-on-release

on:
  push:
    branches:
      - master
      - next
  tags:
    - "*"

jobs:
  # Build
  build-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Docker Tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            DOCKER_TAG="${GITHUB_REF:10}"
          elif [[ $GITHUB_REF == refs/heads/next ]]; then
            DOCKER_TAG="dev"
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            DOCKER_TAG="latest"
          else
            DOCKER_TAG="${GITHUB_REF:11}"
          fi
          echo ::set-output name=tag::${DOCKER_TAG}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/next' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          platforms: linux/arm64/v8
          tags: cwlf/authentik:${{ steps.tag.outputs.tag }}
  build-proxy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15"
      - name: prepare go api client
        run: |
          cd outpost
          go get -u github.com/go-swagger/go-swagger/cmd/swagger
          swagger generate client -f ../swagger.yaml -A authentik -t pkg/
          go build -v .
      - name: Set Docker Tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            DOCKER_TAG="${GITHUB_REF:10}"
          elif [[ $GITHUB_REF == refs/heads/next ]]; then
            DOCKER_TAG="dev"
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            DOCKER_TAG="latest"
          else
            DOCKER_TAG="${GITHUB_REF:11}"
          fi
          echo ::set-output name=tag::${DOCKER_TAG}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/next' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          platforms: linux/arm64/v8
          tags: cwlf/authentik-proxy:${{ steps.tag.outputs.tag }}
  build-static:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: prepare ts api client
        run: |
          docker run --rm -v $(pwd):/local openapitools/openapi-generator-cli generate -i /local/swagger.yaml -g typescript-fetch -o /local/web/api --additional-properties=typescriptThreePlus=true,supportsES6=true,npmName=authentik-api,npmVersion=1.0.0
      - name: Set Docker Tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            DOCKER_TAG="${GITHUB_REF:10}"
          elif [[ $GITHUB_REF == refs/heads/next ]]; then
            DOCKER_TAG="dev"
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            DOCKER_TAG="latest"
          else
            DOCKER_TAG="${GITHUB_REF:11}"
          fi
          echo ::set-output name=tag::${DOCKER_TAG}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/next' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          platforms: linux/arm64/v8
          tags: cwlf/authentik-static:${{ steps.tag.outputs.tag }}
  test-release:
    needs:
      - build-server
      - build-static
      - build-proxy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Run test suite in final docker images
        run: |
          sudo apt-get install -y pwgen
          echo "PG_PASS=$(pwgen 40 1)" >> .env
          echo "AUTHENTIK_SECRET_KEY=$(pwgen 50 1)" >> .env
          docker-compose pull -q
          docker-compose up --no-start
          docker-compose start postgresql redis
          docker-compose run -u root --entrypoint /bin/bash server -c "pip install --no-cache -r requirements-dev.txt && ./manage.py test authentik"
  sentry-release:
    needs:
      - test-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Create a Sentry.io release
        uses: tclindner/sentry-releases-action@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: cwlforg
          SENTRY_PROJECT: authentik
          SENTRY_URL: https://sentry.cwlf.org
        with:
          tagName: 2021.4.3
          environment: cwlforg-prod
